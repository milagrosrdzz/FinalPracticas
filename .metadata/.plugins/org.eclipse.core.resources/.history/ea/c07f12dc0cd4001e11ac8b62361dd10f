package com.AppConvert.backAppConvert.service;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.persistence.EntityNotFoundException;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.AppConvert.backAppConvert.interfaces.ProductoInterface;
import com.AppConvert.backAppConvert.modelo.Producto;
import com.AppConvert.backAppConvert.modeloDAO.ProductoDAO;

@Service
public class ProductoService implements ProductoInterface{
	
	 @Autowired
	 private ProductoDAO productoDao;
	    

	 @Transactional
	 public int sumarCantidadYActualizarTotal(Long idProducto, int cantidad) {
	     System.out.println("Entrando en sumarCantidadYActualizarTotal");

	     Producto producto = productoDao.obtenerPorId(idProducto);
	     System.out.println("Producto antes de la actualización: " + idProducto + ", cantidad: " + cantidad);

	     producto.setCantidadTotal(producto.getCantidadTotal() + cantidad);
	     System.out.println("Cantidad total después de la suma: " + producto.getCantidadTotal());

	     System.out.println("Producto después de la actualización: " + producto.gettCantidadTotal(cantidad));


	     System.out.println("Saliendo de sumarCantidadYActualizarTotal");
	     return producto.getCantidadTotal();;
	 }
	 /*public Producto sumarCantidadYActualizarTotal(Long id_producto, int cantidad) {
	     Optional<Producto> optionalProducto = Optional.ofNullable(productoDao.obtenerPorId(id_producto));

	     if (optionalProducto.isPresent()) {
	         Producto producto = optionalProducto.get();
	         producto.setCantidad(producto.getCantidad() + cantidad);
	         return productoDao.save(producto);
	     } else {
	         // Producto no encontrado, lanzar una excepción específica
	         throw new EntityNotFoundException("Producto no encontrado con ID: " + id_producto);
	     }
	 }*/


	public List<Map<String, Object>> listar() {
		return productoDao.listar();
	}

	public int add(Producto p) {
		return productoDao.add(p);
	}

	public int edit(Producto p) {
		return productoDao.edit(p);
	}

	public long delete(long id_producto) {
		return productoDao.delete(id_producto);
	}

	@Override
	public List<Map<String, Object>> listarId(int id_usuario) {
		// TODO Auto-generated method stub
		return productoDao.listarId(id_usuario);
	}

	@Override
	public Optional<Producto> findById(Long id) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	public Producto obtenerPorId(Long id_usuario) {
		return productoDao.obtenerPorId(id_usuario);
	}


	

}
