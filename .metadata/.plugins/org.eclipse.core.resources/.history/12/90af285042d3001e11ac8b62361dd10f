package com.AppConvert.backAppConvert.modeloDAO;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.AppConvert.backAppConvert.interfaces.ProductoInterface;
import com.AppConvert.backAppConvert.modelo.Producto;

@Repository
@Transactional
public class ProductoDAO implements ProductoInterface{

	@Autowired
	JdbcTemplate template;
	
	@Override
	public List<Map<String, Object>> listar() {
		List<Map<String, Object>> list = template.queryForList("select * from producto");
		return list;
	}

	@Override
	public int add(Producto p) {
		String sql = "insert into producto(nombre,cantidad)values(?,?)";
		return template.update(sql, p.getNombre(), p.getCantidad());
	}

	@Override
	public int edit(Producto p) {
		String sql="update producto set nombre=?, cantidad=? where id_producto?";		
		return template.update(sql,p.getNombre(),p.getCantidad());
	}

	@Override
	public long delete(long id_producto) {
		String sql="delete from producto where id_producto=?";
		return template.update(sql,id_producto);
	}

	@Override
	public List<Map<String, Object>> listarId(int id_usuario) {
		// TODO Auto-generated method stub
		return null;
	}

	public Producto save(Producto producto) {
		return null;
	}

	public Producto findById(int id_producto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<Producto> findById(Long id) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	public Producto obtenerPorId(Long id_producto) {
	    String sql = "SELECT * FROM producto WHERE id_producto = ?";

	    try {
	        return template.queryForObject(sql, new Object[]{id_producto}, (rs, rowNum) -> {
	            Producto producto = new Producto();
	            producto.setId_producto(rs.getLong("id_producto"));
	            producto.setNombre(rs.getString("nombre"));
	            producto.setCantidad(rs.getInt("cantidad"));
	            producto.setCantidad(rs.getInt("cantidadTotal"));
	            
	            return producto;
	        });
	    } catch (EmptyResultDataAccessException e) {
	        // Manejar el caso en que no se encuentra ning√∫n resultado
	        return null;
	    }
	}

}
